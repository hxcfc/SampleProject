version: '3.8'

services:
  # SampleProject API - Production
  sampleproject-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sampleproject-api-prod
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - Database__UseInMemory=false
      - Database__ConnectionString=${DATABASE_CONNECTION_STRING}
      - Jwt__SecretKey=${JWT_SECRET_KEY}
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
      - Swagger__Enabled=false
      - HealthCheck__Enabled=true
      - HealthCheck__EnableUI=false
      - Cors__AllowedOrigins=${CORS_ALLOWED_ORIGINS}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sampleproject-network
    volumes:
      - ./Logs:/app/Logs
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # PostgreSQL Database - Production
  postgres:
    image: postgres:16-alpine
    container_name: sampleproject-postgres-prod
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sampleproject-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis - Production
  redis:
    image: redis:7-alpine
    container_name: sampleproject-redis-prod
    volumes:
      - redis_data:/data
    networks:
      - sampleproject-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  postgres_data:
  redis_data:

networks:
  sampleproject-network:
    driver: bridge
